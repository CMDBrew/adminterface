---
name: Release

on:
  push:
    tags:
      - v*

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          files: |
            LICENSE.md

  npm:
    name: Publish NPM package on Github
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
          registry-url: https://npm.pkg.github.com/
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

  ruby_github:
    name: Publish Ruby gem on Github
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v2
      - name: Publish to GitHub Ruby Gem
        uses: jstastny/publish-gem-to-github@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          owner: cmdbrew

  ruby_rubygems:
    name: Publish Ruby gem on rubygems.org
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0
          bundler: default
          bundler-cache: true
      - name: Setup credentials
        run: |
          mkdir -p $HOME/.gem
          touch $HOME/.gem/credentials
          chmod 0600 $HOME/.gem/credentials
          printf -- "---\n:rubygems_api_key: ${GEM_HOST_API_KEY}\n" > $HOME/.gem/credentials
        env:
          GEM_HOST_API_KEY: "${{secrets.RUBYGEMS_API_KEY}}"
      - name: Publish to rubygems.org
        run: |
          gem build *.gemspec
          gem push *.gem

  delete_rc_versions:
    needs: [npm, ruby_github]
    name: Delete release candidates for the current version
    runs-on: ubuntu-latest
    steps:
      - id: get-version
        run: |
          version=$(echo ${GITHUB_REF#refs/*/} | cut -dv -f2)
          echo "current release version is $version"
          echo "::set-output name=version::$version"
      - uses: smartsquaregmbh/delete-old-packages@v0.3.1
        with:
          keep: 0
          version-pattern: "${{ steps.get-version.outputs.version }}(-|\\.)rc\\d+$"
          dry-run: false
          names: |
            adminterface

  docs:
    needs: release
    name: Publish docs
    runs-on: ubuntu-latest
    env:
      working-directory: ./website
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.GH_PAGES_DEPLOY_RSA }}
      - name: Create env file
        working-directory: ${{ env.working-directory }}
        run: |
          cat << EOF >> .env
          APPLICATION_ID=${{ secrets.ALGOLIA_APPLICATION_ID }}
          API_KEY=${{ secrets.ALGOLIA_API_KEY }}
          EOF
      - name: Release to GitHub Pages
        working-directory: ${{ env.working-directory }}
        env:
          USE_SSH: true
          GIT_USER: git
        run: |
          git config --global user.email "${{ secrets.GH_PAGES_DEPLOY_USER_EMAIL }}"
          git config --global user.name "${{ secrets.GH_PAGES_DEPLOY_USER_NAME }}"
          yarn install --frozen-lockfile
          yarn deploy
