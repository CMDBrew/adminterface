name: CI

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - main

jobs:
  lint:
    name: Run linters
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0
          bundler: default
          bundler-cache: true
      - name: Run linters
        run: |
          bundle exec rails prepare_assets
          bundle exec standardrb
          yarn lint

  docs:
    name: Build Docusaurus site
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up NPM
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: run yarn build
        working-directory: ./website
        run: |
          yarn install
          yarn build

  jest:
    name: Run Jest tests
    runs-on: ubuntu-latest
    needs: [lint, docs]
    steps:
      - uses: actions/checkout@v2
      - name: Set up NPM
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Run tests
        run: |
          yarn install
          yarn test

  sqlite:
    runs-on: ubuntu-latest
    needs: [lint, docs]
    strategy:
      matrix:
        ruby: ['2.7', '3.0']
        gemfile:
          - rails_6_0
          - rails_6_1
    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/gemfiles/${{ matrix.gemfile }}.gemfile
      BUNDLE_PATH_RELATIVE_TO_CWD: true
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler: default
          bundler-cache: true
      - name: Run tests
        env:
          DATABASE_URL: "sqlite3:adminterface_test"
          RAILS_ENV: test
          NODE_ENV: test
        run: |
          bundle exec rails prepare_assets
          bundle exec rails db:test:prepare
          bundle exec rails test
      - name: Prepare artifacts for codeclimate
        run: |
          mv coverage/coverage.json coverage/raw.sqlite.${{ matrix.ruby }}.${{ matrix.gemfile }}.json
      - name: Save partial coverage as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage/raw.sqlite.${{ matrix.ruby }}.${{ matrix.gemfile }}.json

  mysql:
    runs-on: ubuntu-latest
    needs: [lint, docs]
    strategy:
      matrix:
        ruby: ['2.7', '3.0']
        gemfile:
          - rails_6_0
          - rails_6_1
    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/gemfiles/${{ matrix.gemfile }}.gemfile
      BUNDLE_PATH_RELATIVE_TO_CWD: true
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        ports: ['3306:3306']
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler: default
          bundler-cache: true
      - name: Run tests
        env:
          DATABASE_URL: mysql2://root:password@127.0.0.1:3306/test
          RAILS_ENV: test
          NODE_ENV: test
        run: |
          bundle exec rails prepare_assets
          bundle exec rails db:test:prepare
          bundle exec rails test
      - name: Prepare artifacts for codeclimate
        run: |
          mv coverage/coverage.json coverage/raw.mysql.${{ matrix.ruby }}.${{ matrix.gemfile }}.json
      - name: Save partial coverage as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage/raw.mysql.${{ matrix.ruby }}.${{ matrix.gemfile }}.json

  postgres:
    needs: [lint, docs]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby: ['2.7', '3.0']
        gemfile:
          - rails_6_0
          - rails_6_1
    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/gemfiles/${{ matrix.gemfile }}.gemfile
      BUNDLE_PATH_RELATIVE_TO_CWD: true
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test
        ports: ['5432:5432']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler: default
          bundler-cache: true
      - name: Run tests
        env:
          DATABASE_URL: postgres://postgres:password@localhost:5432/test
          RAILS_ENV: test
          NODE_ENV: test
        run: |
          bundle exec rails prepare_assets
          bundle exec rails db:test:prepare
          bundle exec rails test
      - name: Prepare artifacts for codeclimate
        run: |
          mv coverage/coverage.json coverage/raw.postgres.${{ matrix.ruby }}.${{ matrix.gemfile }}.json
      - name: Save partial coverage as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage/raw.postgres.${{ matrix.ruby }}.${{ matrix.gemfile }}.json

  codeclimate:
    needs: [sqlite, mysql, postgres]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download partial coverages
        uses: actions/download-artifact@v2
        with:
          name: coverage
          path: coverage
      - name: Format, sum & upload results to Code Climate
        uses: paambaati/codeclimate-action@v3.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          debug: true
          coverageLocations: coverage/raw.*.json:simplecov
