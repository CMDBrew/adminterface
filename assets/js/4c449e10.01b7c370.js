"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[583],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return p}});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),l=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=l(e.components);return i.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=l(n),p=a,f=u["".concat(s,".").concat(p)]||u[p]||m[p]||o;return n?i.createElement(f,r(r({ref:t},d),{},{components:n})):i.createElement(f,r({ref:t},d))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,r[1]=c;for(var l=2;l<o;l++)r[l]=n[l];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1107:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return d},default:function(){return u}});var i=n(7462),a=n(3366),o=(n(7294),n(3905)),r=["components"],c={sidebar_position:3},s="Batch Actions",l={unversionedId:"guides/batch-actions",id:"guides/batch-actions",isDocsHomePage:!1,title:"Batch Actions",description:"We've kept the existing functionalities with some minor adjustments (marked with \u2728). Please see [ActiveAdmin] for basic configurations.",source:"@site/docs/guides/batch-actions.md",sourceDirName:"guides",slug:"/guides/batch-actions",permalink:"/active_admin_bootstrap/docs/guides/batch-actions",editUrl:"https://github.com/CMDBrew/active_admin_bootstrap/edit/master/website/docs/guides/batch-actions.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Customizing the Form",permalink:"/active_admin_bootstrap/docs/guides/customizing-the-form"},next:{title:"Confirm Dialog",permalink:"/active_admin_bootstrap/docs/guides/confirm-dialog"}},d=[{value:"Batch Action Forms",id:"batch-action-forms",children:[{value:"Form",id:"form",children:[]},{value:"Confirm Dialog",id:"confirm-dialog",children:[]}]}],m={toc:d};function u(e){var t=e.components,n=(0,a.Z)(e,r);return(0,o.kt)("wrapper",(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"batch-actions"},"Batch Actions"),(0,o.kt)("p",null,"We've kept the existing functionalities with some minor adjustments (marked with \u2728). Please see ",(0,o.kt)("a",{parentName:"p",href:"https://activeadmin.info/9-batch-actions.html"},"ActiveAdmin")," for basic configurations."),(0,o.kt)("h2",{id:"batch-action-forms"},"Batch Action Forms"),(0,o.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"danger")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},'We\'ve changed how you specify the input types for the "Batch Action forms" to be consistent with Formtastic forms. See more information about form configurations in ',(0,o.kt)("a",{parentName:"p",href:"/active_admin_bootstrap/docs/guides/customizing-the-form"},"Customizing the Form"),"."))),(0,o.kt)("h3",{id:"form"},"Form"),(0,o.kt)("p",null,"You will now need to specify the input options as a ",(0,o.kt)("inlineCode",{parentName:"p"},"hash"),". See ",(0,o.kt)("a",{parentName:"p",href:"/active_admin_bootstrap/docs/guides/customizing-the-form"},"Customizing the Form"),".\nPlease note the following input types are currently not supported:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},":file")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},":rich_text"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ruby"},'ActiveAdmin.register User do\n  batch_action :flag, form: {\n    name: {as: :string},\n    secret: {as: :hidden, input_html: {value: "secret"}},\n    updated_at: {as: :date_picker}\n  } do |ids, inputs|\n    # inputs is a hash of all the form fields you requested\n    redirect_to collection_path, notice: [ids, inputs].to_s\n  end\nend\n')),(0,o.kt)("h3",{id:"confirm-dialog"},"Confirm Dialog"),(0,o.kt)("p",null,"You can change the styles of the confirm dialog by passing in ",(0,o.kt)("inlineCode",{parentName:"p"},"confirm_dialog:")," option. See ",(0,o.kt)("a",{parentName:"p",href:"/active_admin_bootstrap/docs/guides/confirm-dialog"},"Confirm Dialog")," for more details."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ruby"},'ActiveAdmin.register User do\n  batch_action :flag, confirm_dialog: {\n    buttons: {\n      ok: {class: "btn btn-danger", text: "Confirm!!!"}\n    }\n  } do |ids, inputs|\n    # inputs is a hash of all the form fields you requested\n    redirect_to collection_path, notice: [ids, inputs].to_s\n  end\nend\n')),(0,o.kt)("p",null,"To change the default I18n translations you can create an ",(0,o.kt)("inlineCode",{parentName:"p"},"active_admin.en.yml")," file and update the ",(0,o.kt)("inlineCode",{parentName:"p"},"active_admin.batch_actions.confirm_dialog")," key like below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"---\nen:\n  active_admin:\n    batch_actions:\n      confirm_dialog:\n        cancel: Cancel\n        ok: Okay!\n")))}u.isMDXComponent=!0}}]);