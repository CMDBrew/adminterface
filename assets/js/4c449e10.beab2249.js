"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[583],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return u}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=l(n),u=i,f=m["".concat(c,".").concat(u)]||m[u]||p[u]||r;return n?a.createElement(f,o(o({ref:t},d),{},{components:n})):a.createElement(f,o({ref:t},d))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var l=2;l<r;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1107:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return d},default:function(){return m}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),o=["components"],s={sidebar_position:3},c="Batch Actions",l={unversionedId:"guides/batch-actions",id:"guides/batch-actions",isDocsHomePage:!1,title:"Batch Actions",description:"We've kept the existing functionalities with some minor adjustments. Please see [ActiveAdmin] for basic configurations.",source:"@site/docs/guides/batch-actions.md",sourceDirName:"guides",slug:"/guides/batch-actions",permalink:"/active_admin_bootstrap/docs/guides/batch-actions",editUrl:"https://github.com/CMDBrew/active_admin_bootstrap/edit/master/website/docs/guides/batch-actions.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Customizing the Form",permalink:"/active_admin_bootstrap/docs/guides/customizing-the-form"},next:{title:"Confirm Dialog",permalink:"/active_admin_bootstrap/docs/guides/confirm-dialog"}},d=[{value:"Batch Action Forms",id:"batch-action-forms",children:[{value:"Inputs",id:"inputs",children:[]},{value:"Confirm Dialog",id:"confirm-dialog",children:[]}]}],p={toc:d};function m(e){var t=e.components,n=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"batch-actions"},"Batch Actions"),(0,r.kt)("p",null,"We've kept the existing functionalities with some minor adjustments. Please see ",(0,r.kt)("a",{parentName:"p",href:"https://activeadmin.info/9-batch-actions.html"},"ActiveAdmin")," for basic configurations."),(0,r.kt)("h2",{id:"batch-action-forms"},"Batch Action Forms"),(0,r.kt)("h3",{id:"inputs"},"Inputs"),(0,r.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"danger")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"We've updated the naming for input types to be consistent with Formtastic forms. Also, please note the following input types are currently not supported:"),(0,r.kt)("ul",{parentName:"div"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},":file")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},":rich_text"))))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"ActiveAdmin"),(0,r.kt)("th",{parentName:"tr",align:null},"Formtastic (ActiveAdminBootstrap)"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},":text")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},":string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},":textarea")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},":text"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},":checkbox")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},":boolean"))))),(0,r.kt)("p",null,"Here is an actual example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},"# app/admin/users.rb\n\n# ActiveAdmin\nbatch_action :flag, form: {\n  reason: :text,\n  notes:  :textarea,\n  hide:   :checkbox,\n} do |ids, inputs|\n  # ...\nend\n\n# ActiveAdminBootstrap\nbatch_action :flag, form: {\n  reason: :string,\n  notes:  :text,\n  hide:   :boolean,\n} do |ids, inputs|\n  # ...\nend\n")),(0,r.kt)("p",null,"The form now accepts options as a Hash. See ",(0,r.kt)("a",{parentName:"p",href:"/active_admin_bootstrap/docs/guides/customizing-the-form"},"Customizing the Form"),". See more information about form configurations in ",(0,r.kt)("a",{parentName:"p",href:"/active_admin_bootstrap/docs/guides/customizing-the-form"},"Customizing the Form"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},'# app/admin/users.rb\nActiveAdmin.register User do\n  batch_action :flag, form: {\n    name: {as: :string},\n    secret: {as: :hidden, input_html: {value: "secret"}},\n    updated_at: {as: :date_picker}\n  } do |ids, inputs|\n    # inputs is a hash of all the form fields you requested\n    redirect_to collection_path, notice: [ids, inputs].to_s\n  end\nend\n')),(0,r.kt)("h3",{id:"confirm-dialog"},"Confirm Dialog"),(0,r.kt)("p",null,"You can change the styles of the confirm dialog by passing in ",(0,r.kt)("inlineCode",{parentName:"p"},"confirm_dialog:")," option. See ",(0,r.kt)("a",{parentName:"p",href:"/active_admin_bootstrap/docs/guides/confirm-dialog"},"Confirm Dialog")," for more details."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},'# app/admin/users.rb\nActiveAdmin.register User do\n  batch_action :flag, confirm_dialog: {\n    buttons: {\n      ok: {class: "btn btn-danger", text: "Confirm!!!"}\n    }\n  } do |ids, inputs|\n    # inputs is a hash of all the form fields you requested\n    redirect_to collection_path, notice: [ids, inputs].to_s\n  end\nend\n')),(0,r.kt)("p",null,"To change the default I18n translations you can create an ",(0,r.kt)("inlineCode",{parentName:"p"},"active_admin.en.yml")," file and update the ",(0,r.kt)("inlineCode",{parentName:"p"},"active_admin.batch_actions.confirm_dialog")," key like below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"# config/locales/active_admin.en.yml\n---\nen:\n  active_admin:\n    batch_actions:\n      confirm_dialog:\n        cancel: Cancel\n        ok: Okay!\n")))}m.isMDXComponent=!0}}]);